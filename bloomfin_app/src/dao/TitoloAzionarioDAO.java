package dao;
 // CODICE SOLO DI PROVA
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import entity.TitoloAzionario;


public class TitoloAzionarioDAO {

	
	
	
	public static void createTitoloAzionario(java.sql.Connection connection, TitoloAzionario titolo) throws Exception {
    	if (titolo.getId() != null) {
    		System.out.println("L'oggetto è già nel database.");
    		return;
    	}
		
		PreparedStatement preparedStatement = null;
    	try {
    		final String QUERY_SQL = "INSERT INTO Titoli (ValoreAzione) VALUES (?)" ;
    		preparedStatement = connection.prepareStatement(QUERY_SQL, Statement.RETURN_GENERATED_KEYS);
    		preparedStatement.setFloat(1, titolo.getValoreAzione());

    		
    		preparedStatement.executeUpdate();
            ResultSet resultSet = preparedStatement.getGeneratedKeys();
            if (resultSet.next() == true) {
            	long ID = resultSet.getLong(1);
                if (resultSet.wasNull() == false) {
                	titolo.setId(ID);
                }
            }
            resultSet.close();
        } catch (SQLException e) {
        	throw new Exception("Errore durante l'inserimento nel database.");
        } finally {
        	preparedStatement.close();
        }
	}
	
    public static TitoloAzionario readTitoloAzionario(java.sql.Connection connection, long id) throws Exception {
    	TitoloAzionario titolo = null;
    	PreparedStatement preparedStatement = null;
    	try {
    		final String QUERY_SQL = "SELECT * FROM Titoli WHERE ID=?" ;
    		preparedStatement = connection.prepareStatement(QUERY_SQL);
    		preparedStatement.setLong(1, id);
    		
    		ResultSet resultSet = preparedStatement.executeQuery();
            while (resultSet.next() == true) {
                titolo = deserializeCurrentRecord(connection, resultSet);
            }
            resultSet.close();
        } catch (SQLException e) {
            throw new Exception("Errore durante la lettura da database.", e);
        } finally {
        	preparedStatement.close();
        }
        
        return titolo;
    }
    
    public static ArrayList<TitoloAzionario> readTitoliAzionari(java.sql.Connection connection) throws Exception {
    	ArrayList<TitoloAzionario> listaTitoli = new ArrayList<TitoloAzionario>();
    	
    	PreparedStatement preparedStatement = null;
    	try {
    		final String QUERY_SQL = "SELECT * FROM Titoli" ;
    		preparedStatement = connection.prepareStatement(QUERY_SQL);
    		ResultSet resultSet = preparedStatement.executeQuery();
        	TitoloAzionario titolo = null;
            while (resultSet.next() == true) {
            	titolo = deserializeCurrentRecord(connection, resultSet);
            	listaTitoli.add(titolo);
            }
            resultSet.close();
            return listaTitoli;
        } catch (SQLException e) {
            throw new Exception("Errore durante la lettura dei titoli nella borsa.", e);
        } finally {
        	preparedStatement.close(); // Cannot invoke "java.sql.PreparedStatement.close()" because "preparedStatement" is null
        }
    }

    
    private static TitoloAzionario deserializeCurrentRecord(java.sql.Connection connection, ResultSet rs) throws Exception {
    	TitoloAzionario titolo = new TitoloAzionario();
        titolo.setId(rs.getLong("Id"));
        titolo.setValoreAzione(rs.getFloat("ValoreAzione"));

        
        return titolo;
    }
    

	
	
	/*static TitoloAzionario create(int valore){
		Connection c = DBManager.getConnection();
		TitoloAzionario titolo = new TitoloAzionario(valore);

		try(Statement stmt = c.createStatement()){
			
			stmt.executeUpdate("INSERT INTO ENTITIES (STATO) VALUES ('"+valore+"')");
			ResultSet rs = stmt.getGeneratedKeys();
			if (rs.next() == false){
				throw new SQLException("ID value was not autogenerated!");
			}
			System.out.println("Creation done. Auto-genreated ID "+rs.getLong(1));
			titolo.setId(rs.getLong(1));
			
		} catch (SQLException ex) {
			ex.printStackTrace();
		}
		if (titolo.getId() == null)
			titolo = null;
		return titolo;
	}*/
}
